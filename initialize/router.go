package initialize

import (
	"eva/biz/router"
	_ "eva/docs"
	"eva/global"
	"eva/middleware"
	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
	"net/http"
)

// 初始化总路由

func Routers() *gin.Engine {
	Router := gin.Default()
	systemRouter := router.RouterGroupApp.System
	exampleRouter := router.RouterGroupApp.Example
	privateRouter := router.RouterGroupApp.Private
	// 如果想要不使用nginx代理前端网页，可以修改 web/.env.production 下的
	// VUE_APP_BASE_API = /
	// VUE_APP_BASE_PATH = http://localhost
	// 然后执行打包命令 npm run build。在打开下面4行注释
	// Router.LoadHTMLGlob("./dist/*.html") // npm打包成dist的路径
	// Router.Static("/favicon.ico", "./dist/favicon.ico")
	// Router.Static("/static", "./dist/assets")   // dist里面的静态资源
	// Router.StaticFile("/", "./dist/index.html") // 前端网页入口页面

	Router.StaticFS(global.EVA_CONFIG.Local.Path, http.Dir(global.EVA_CONFIG.Local.StorePath)) // 为用户头像和文件提供静态地址
	// Router.Use(middleware.LoadTls())  // 如果需要使用https 请打开此中间件 然后前往 core/server.go 将启动模式 更变为 Router.RunTLS("端口","你的cre/pem文件","你的key文件")
	// 跨域，如需跨域可以打开下面的注释
	Router.Use(middleware.Cors()) // 直接放行全部跨域请求
	//Router.Use(middleware.CorsByRules()) // 按照配置的规则放行跨域请求
	global.EVA_LOG.Info("use middleware cors")
	Router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	//global.EVA_LOG.Info("register swagger handler")
	// 方便统一添加路由组前缀 多服务器上线使用

	PublicGroup := Router.Group("")
	ApiGroup := Router.Group("api/v1")
	PrivateGroup := Router.Group("api/v1/private")
	{
		// 健康监测
		Router.GET("/ping", func(c *gin.Context) {
			c.JSON(200, "ok")
		})
	}

	{
		systemRouter.InitBaseRouter(PublicGroup) // 注册基础功能路由 不做鉴权/ login/ 验证码
		//systemRouter.InitInitRouter(PublicGroup) // 自动初始化相关
	}
	//PrivateGroup.Use(middleware.JWTAuth()).Use(middleware.CasbinHandler())
	{
		//systemRouter.InitApiRouter(PrivateGroup)                 // 注册功能api路由
		//systemRouter.InitJwtRouter(PrivateGroup)                 // jwt相关路由
		systemRouter.InitUserRouter(ApiGroup) // 注册用户路由
		//systemRouter.InitMenuRouter(PrivateGroup)                // 注册menu路由
		//systemRouter.InitSystemRouter(PrivateGroup)              // system相关路由
		//systemRouter.InitCasbinRouter(PrivateGroup)              // 权限相关路由
		//systemRouter.InitAutoCodeRouter(PrivateGroup)            // 创建自动化代码
		//systemRouter.InitAuthorityRouter(PrivateGroup)           // 注册角色路由
		//systemRouter.InitSysDictionaryRouter(PrivateGroup)       // 字典管理
		//systemRouter.InitAutoCodeHistoryRouter(PrivateGroup)     // 自动化代码历史
		//systemRouter.InitSysOperationRecordRouter(PrivateGroup)  // 操作记录
		//systemRouter.InitSysDictionaryDetailRouter(PrivateGroup) // 字典详情管理
		//systemRouter.InitAuthorityBtnRouterRouter(PrivateGroup)  // 字典详情管理

		//exampleRouter.InitExcelRouter(PrivateGroup)                 // 表格导入导出
		//exampleRouter.InitCustomerRouter(PrivateGroup)              // 客户路由
		exampleRouter.InitFileUploadAndDownloadRouter(ApiGroup) // 文件上传下载功能路由

		privateRouter.InitCalendarRouter(PrivateGroup) // 个人私有事务路由

		// Code generated by eva Begin; DO NOT EDIT.

		// Code generated by eva End; DO NOT EDIT.
	}

	InstallPlugin(Router) // 安装插件

	global.EVA_LOG.Info("router register success")
	return Router
}
